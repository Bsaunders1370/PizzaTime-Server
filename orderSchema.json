{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Individual Order schema",
    "examples": [
        {
            "orderId": 234,
            "accountId": 123,
            "paymentTransactionId": 456,
            "contact": {
                "firstName": "Ms. Foobar",
                "lastName": "O'Neil, the 3rd",
                "phone": "(555) 555-5555"
            },
            "address": {
                "street1": "",
                "street2": "",
                "city": "",
                "state": "UT",
                "zip": "55555-4444"

            },
            "orderItems": [
                {
                    "orderType": "pizza",
                    "itemName": "Hawaiian",
                    "size": "Large",
                    "quantity": 1,
                    "pricePerItem": 12
                },
                {
                    "orderType": "drink",
                    "itemName": "Coke",
                    "size": "Small",
                    "quantity": 1,
                    "pricePerItem": 1.5
                },
                {
                    "orderType": "sides",
                    "itemName": "Breadsticks",
                    "quantity": 1,
                    "pricePerItem": 5.99
                },
                {
                    "orderType": "coupons",
                    "itemName": "July2019Promo",
                    "quantity": 1,
                    "pricePerItem": -3.0
                },
                {
                    "orderType": "fees",
                    "itemName": "Delivery Charge",
                    "quantity": 1,
                    "pricePerItem": 2.0
                }
            ]
        }
    ],
    "type": "object",
    "required": [ "orderId", "accountId", "paymentTransactionId", "contact", "orderItems"],
    "additionalProperties": false,
    "properties": {
        "orderId": {
            "type": "integer",
            "description": "orderId must be an integer"
        },
        "accountId": {
            "type": "integer",
            "description": "accountId must be an integer"
        },
        "paymentTransactionId": {
            "type": "integer",
            "description": "paymentTransactionId must be an integer"
        },
        "contact": {
            "type": "object",
            "required": [ "firstName", "lastName", "phone" ],
            "additionalProperties": false,
            "properties": {
                "firstName": {
                    "type": "string",
                    "maxLength": 30,
                    "pattern": "^[\\w \\.,']*$",
                    "description": "First name must be no more than 30 characters, may contain spaces, and can only contain alphanumerics or these symbols:  ,.'"
                },
                "lastName": {
                    "type": "string",
                    "maxLength": 30,
                    "pattern": "^[\\w \\.,']*$",
                    "description": "Last name must be no more than 30 characters, may contain spaces, and can only contain alphanumerics or these symbols:  ,.'"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 15,
                    "pattern": "1?\\W*([2-9][0-8][0-9])\\W*([2-9][0-9]{2})\\W*([0-9]{4})(\\se?x?t?(\\d*))?",
                    "description": "Phone number must look like a North American number and include the area code"
                },
                "email": {
                    "type": "string",
                    "maxLength": 50,
                    "format": "email",
                    "description": "E-mail address must look valid, like x@y.com"
                }
            }
        },
        "address": {
            "type": "object",
            "required": [ "street1", "city", "state", "zip" ],
            "additionalProperties": false,
            "properties": {
                "street1": {
                    "type": "string",
                    "maxLength": 50,
                    "pattern": "(\\w \\.,')*",
                    "description": "Street address must be no more than 50 characters and contain alphanumerics or these symbols:  .,'"
                },
                "street2": {
                    "type": "string",
                    "maxLength": 50,
                    "pattern": "(\\w \\.,')*",
                    "description": "Street address (line 2) must be no more than 50 characters and contain alphanumerics or these symbols:  .,'"
                },
                "city": {
                    "type": "string",
                    "maxLength": 50,
                    "pattern": "(\\w \\.')*",
                    "description": "City must be no more than 50 characters, must start with an alphanumeric, and otherwise contain only alphanumerics or these symbols: .'"
                },
                "state": {
                    "type": "string",
                    "maxLength": 20,
                    "pattern": "(\\w \\.)*",
                    "description": "State  must be no more than 20 characters, must start with an alphanumeric, and otherwise contain only alphanumerics or these symbols: .'"
                },
                "zip": {
                    "type": "string",
                    "maxLength": 15,
                    "pattern": "^(?!00000)(?<zip>(?<zip5>\\d{5})(?:[ -](?=\\d))?(?<zip4>\\d{4})?)$",
                    "description": "Zip code must look like a U.S. code, like 55555 or 55555-4444"
                }
            }
        },
        "orderItems": {
            "type": "array",
            "minItems": 1,
            "maxItems": 1000,
            "uniqueItems": true,
            "items": {
                "type": "object",
                "required": [ "orderType", "itemName", "quantity", "pricePerItem"],
                "additionalProperties": false,
                "properties": {
                    "orderType": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "(\\w \\.,')*",
                        "description": "Order type must be no more than 50 characters and contain alphanumerics or these symbols:  .,'"
                    },
                    "itemName": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "(\\w \\.,')*",
                        "description": "Item's name must be no more than 50 characters and contain alphanumerics or these symbols:  .,'"
                    },
                    "size": {
                        "type": "string",
                        "maxLength": 20,
                        "pattern": "(\\w \\.,')*",
                        "description": "Item's size must be no more than 20 characters and contain alphanumerics or these symbols:  .,'"
                    },
                    "quantity": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 1000
                    },
                    "pricePerItem": {
                        "type": "number",
                        "minimum": -1000,
                        "maximum": 1000
                    }
                }
            }
        }
    }
}
